<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kognit.API.WebApi</name>
    </assembly>
    <members>
        <member name="M:Kognit.API.WebApi.Controllers.EmployeesController.Get(Kognit.API.Application.Features.Employees.Queries.GetEmployees.GetEmployeesQuery)">
            <summary>
            Gets a list of employees based on the specified filter.
            </summary>
            <param name="filter">The filter used to get the list of employees.</param>
            <returns>A list of employees.</returns>
        </member>
        <member name="M:Kognit.API.WebApi.Controllers.EmployeesController.Paged(Kognit.API.Application.Features.Employees.Queries.GetEmployees.PagedEmployeesQuery)">
            <summary>
            Retrieves a paged list of employees.
            Support Ngx-DataTables https://medium.com/scrum-and-coke/angular-11-pagination-of-zillion-rows-45d8533538c0
            </summary>
            <param name="query">The query parameters for the paged list.</param>
            <returns>A paged list of employees.</returns>
        </member>
        <member name="M:Kognit.API.WebApi.Controllers.UserController.Get(Kognit.API.Application.Features.Users.Queries.GetUsers.GetUsersQuery)">
            <summary>
            Gets a list of positions based on the provided filter.
            </summary>
            <param name="filter">The filter used to query the positions.</param>
            <returns>A list of positions.</returns>
        </member>
        <member name="M:Kognit.API.WebApi.Controllers.UserController.Get(System.Guid)">
            <summary>
            Gets a position by its Id.
            </summary>
            <param name="id">The Id of the position.</param>
            <returns>The position with the specified Id.</returns>
        </member>
        <member name="M:Kognit.API.WebApi.Controllers.UserController.Post(Kognit.API.Application.Features.Users.Commands.CreateUser.CreatePositionCommand)">
            <summary>
            Creates a new position.
            </summary>
            <param name="command">The command containing the data for the new position.</param>
            <returns>A 201 Created response containing the newly created position.</returns>
        </member>
        <member name="M:Kognit.API.WebApi.Controllers.UserController.Put(System.Guid,Kognit.API.Application.Features.Users.Commands.UpdateUser.UpdateUserCommand)">
            <summary>
            Updates a position with the given id using the provided command.
            </summary>
            <param name="id">The id of the position to update.</param>
            <param name="command">The command containing the updated information.</param>
            <returns>The updated position.</returns>
        </member>
        <member name="M:Kognit.API.WebApi.Controllers.UserController.Delete(System.Guid)">
            <summary>
            Deletes a position by its Id.
            </summary>
            <param name="id">The Id of the position to delete.</param>
            <returns>The result of the deletion.</returns>
        </member>
        <member name="M:Kognit.API.WebApi.Extensions.AppExtensions.UseSwaggerExtension(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Adiciona endpoints do Swagger
            </summary>
        </member>
        <member name="M:Kognit.API.WebApi.Extensions.AppExtensions.UseErrorHandlingMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Adiciona o middleware de tratamento de erros
            </summary>
        </member>
        <member name="M:Kognit.API.WebApi.Extensions.ServiceExtensions.AddSwaggerExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adiciona e configura o Swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Kognit.API.WebApi.Extensions.ServiceExtensions.AddControllersExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
               Adiciona os Controllers à service collection e configura o serializador JSON para utilizar camelCase.
            </summary>
        </member>
        <member name="M:Kognit.API.WebApi.Extensions.ServiceExtensions.AddCorsExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adiciona o serviço de CORS com as configurações "AllowAll" e "AllowSpecificOrigin".
            </summary>
        </member>
        <member name="M:Kognit.API.WebApi.Extensions.ServiceExtensions.AddVersionedApiExplorerExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Configura o API Explorer para utilizar o versionamento.
            </summary>
        </member>
        <member name="M:Kognit.API.WebApi.Extensions.ServiceExtensions.AddApiVersioningExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adiciona a versão 1.0 da API como padrão, e a utiliza quando a versão não for especificada na rota.
            </summary>
        </member>
        <member name="M:Kognit.API.WebApi.Extensions.ServiceExtensions.AddRoutingExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adiciona o serviço de roteamento e configura para utilizar URLs em minúsculo.
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
